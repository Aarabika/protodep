// Automatically generated by MockGen. DO NOT EDIT!
// Source: helper/auth.go

package helper

import (
	gomock "github.com/golang/mock/gomock"
	transport "gopkg.in/src-d/go-git.v4/plumbing/transport"
)

// Mock of AuthProvider interface
type MockAuthProvider struct {
	ctrl     *gomock.Controller
	recorder *_MockAuthProviderRecorder
}

// Recorder for MockAuthProvider (not exported)
type _MockAuthProviderRecorder struct {
	mock *MockAuthProvider
}

func NewMockAuthProvider(ctrl *gomock.Controller) *MockAuthProvider {
	mock := &MockAuthProvider{ctrl: ctrl}
	mock.recorder = &_MockAuthProviderRecorder{mock}
	return mock
}

func (_m *MockAuthProvider) EXPECT() *_MockAuthProviderRecorder {
	return _m.recorder
}

func (_m *MockAuthProvider) GetRepositoryURL(reponame string) string {
	ret := _m.ctrl.Call(_m, "GetRepositoryURL", reponame)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockAuthProviderRecorder) GetRepositoryURL(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRepositoryURL", arg0)
}

func (_m *MockAuthProvider) AuthMethod() transport.AuthMethod {
	ret := _m.ctrl.Call(_m, "AuthMethod")
	ret0, _ := ret[0].(transport.AuthMethod)
	return ret0
}

func (_mr *_MockAuthProviderRecorder) AuthMethod() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "AuthMethod")
}
